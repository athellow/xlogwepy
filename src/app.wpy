<style lang="less">
.container {
  height: 100%;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: space-between;
  padding: 200rpx 0;
  box-sizing: border-box;
}
</style>

<script>
import wepy from '@wepy/core';
import eventHub from './common/eventHub';
import vuex from '@wepy/x';

wepy.use(vuex);


wepy.app({
  hooks: {
    // App 级别 hook，对整个 App 生效
    // 同时存在 Page hook 和 App hook 时，优先执行 Page hook，返回值再交由 App hook 处
    'before-setData': function (dirty) {
      console.log('setData dirty: ', dirty);
      return dirty;
    }
  },
  data: {
    userInfo: null
  },

  onLaunch() {
    // 展示本地存储能力
    var logs = wx.getStorageSync('logs') || []
    logs.unshift(Date.now())
    wx.setStorageSync('logs', logs)

    // 登录
    // wx.login({
    //   success: res => {
    //     // 发送 res.code 到后台换取 openId, sessionKey, unionId
    //   }
    // })
    // 获取用户信息
    // wx.getSetting({
    //   success: res => {
    //     if (res.authSetting['scope.userInfo']) {
    //       // 已经授权，可以直接调用 getUserInfo 获取头像昵称，不会弹框
    //       wx.getUserInfo({
    //         success: res => {
    //           // 可以将 res 发送给后台解码出 unionId
    //           this.userInfo = res.userInfo
              
    //           // 由于 getUserInfo 是网络请求，可能会在 Page.onLoad 之后才返回
    //           // 所以此处加入 callback 以防止这种情况
    //           if (this.userInfoReadyCallback) {
    //             this.userInfoReadyCallback(res)
    //           }
    //         }
    //       })
    //     }
    //   }
    // })
  },

  methods: {

    sleep (s) {
      return new Promise((resolve, reject) => {
        setTimeout(() => {
          resolve('promise resolved')
        }, s * 1000)
      })
    },

    async testAsync () {
      let d = await this.sleep(3);
      console.log(d);
    },

    userLogin () {
      return new Promise((resolve, reject) => {
        wx.login({
          success: res => {
            var code = res.code
            // 发送 res.code 到后台换取 openId, sessionKey, unionId
            if (code) {
              wx.getSetting({
                success: res => {
                  if (res.authSetting['scope.userInfo']) {
                    // 已经授权，可以直接调用 getUserInfo 获取头像昵称，不会弹框
                    wx.getUserInfo({
                      success: res => {
                        // 可以将 res 发送给后台解码出 unionId
                        this.userInfo = res.userInfo;
                        wx.request({
                          url: 'https://athello.cn/api/v1/user',
                          method: 'post',
                          data: {encryptedData: res.encryptedData, iv: res.iv, code: code},
                          success: res => {
                            if (res.data.status == 0) {
                              wx.setStorageSync("token", res.data.data.token);
                              wx.setStorageSync("userId", res.data.data.user_id);
                              resolve(res.data);  // promise机制放回成功数据
                            } else {
                              reject('error');
                              wx.showToast({
                                title: 'error''
                              })
                            }
                          },
                          fail: function(res) {
                            reject(res);
                            wx.showToast({
                              title: '系统错误'
                            })
                          }
                        })
                      }
                    })
                  }
                }
              })
              
            } else {
              reject("error");
            }
          }
        })
      })
    }
  }
});
</script>
<config>
{
    pages: [
      'pages/index',
      'pages/post/index',
      'pages/post/detail',
      'pages/post/add',
      'pages/ilog/index',
      'pages/ilog/add',
      'pages/we/index',
      'pages/logs'
    ],
    window: {
      backgroundTextStyle: 'light',
      navigationBarBackgroundColor: '#fff',
      navigationBarTitleText: '哈喽日记',
      navigationBarTextStyle: 'black'
    },
  "tabBar": {
    "list": [
      {
        "pagePath": "pages/index",
        "text": "首页"
      },
      {
        "pagePath": "pages/we/index",
        "text": "生活"
      }
    ]
  },
  "networkTimeout": {
    "request": 10000,
    "downloadFile": 10000
  },
  "debug": true,
  "style": "v2",
  "sitemapLocation": "sitemap.json"
}
</config>
