<style lang="less">
  .usermotto {
    margin-top: 200px;
    // font-weight: bold;
    font-size: large;
  }
</style>
<template>
  <view class="container">
    <avatar :userInfo.sync="userInfo" :hasUserInfo.sync="hasUserInfo" :canIUse.sync="canIUse"/>
    <view class="usermotto">
      <text class="user-motto">{{motto}}</text>
    </view>
  </view>
</template>

<script>
  import wepy from '@wepy/core'
  import { mapState } from '@wepy/x';

  const app = getApp()
  wepy.page({
    data: {
      motto: '哈喽日记',
      userInfo: {"avatarUrl": "../static/images/avatar001.jpg"},
      hasUserInfo: false,
      canIUse: wx.canIUse('button.open-type.getUserInfo')
    },

    onLoad: function () {
      var that = this; 
      var userId = wx.getStorageSync("userId");
      
      if (userId == '') {
        app.$wepy.userLogin().then(res => {
          if (res.status == 0) {
            this.userInfo =  res.data
            this.hasUserInfo = true
          }
        })
      } else {
        if (app.userInfo) {
          this.userInfo =  app.userInfo
          this.hasUserInfo = true
        }
      }
      
      // if (app.userInfo) {
      //   this.userInfo =  app.userInfo
      //   this.hasUserInfo = true
      // } else if (this.canIUse){
      //   // 由于 getUserInfo 是网络请求，可能会在 Page.onLoad 之后才返回
      //   // 所以此处加入 callback 以防止这种情况
      //   app.userInfoReadyCallback = res => {
      //     this.userInfo = res.userInfo
      //     this.hasUserInfo = true
      //   }
      // } else {
      //   // 在没有 open-type=getUserInfo 版本的兼容处理
      //   wx.getUserInfo({
      //     success: res => {
      //       app.userInfo = res.userInfo
      //       this.userInfo = res.userInfo
      //       this.hasUserInfo = true
      //     }
      //   })
      // }
    },

      /**
     * 用户点击右上角分享
     */
    onShareAppMessage: function () {
      return {
        title: '哈喽日记',
        path: '/pages/index'
      }
    },

    methods: {
      
    }
  });
</script>
<config>
{
    navigationBarTitleText: '哈喽日记',
    usingComponents: {
      avatar: '../components/avatar',
      "slide-view": "module:miniprogram-slide-view",
    }
}
</config>
